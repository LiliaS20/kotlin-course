package org.example.com.stimmax.kotlincourse.lessons.lesson10.homeworks

fun main() {

//Задачи на работу со словарём
//Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val map1 = mapOf<Int, Int>()

//Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
    val map2 = mapOf<Float, Double>(11F to 11.11, 22F to 22.22)

//Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val map3 = mutableMapOf<Int, String>(1 to "один", 2 to "два")

//Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    map3[3] = "три"

//Используя словарь из предыдущего задания, извлеките значение, используя ключ.
// Попробуй получить значение с ключом, которого в словаре нет.
    println(map3[3])
    println(map3[4])

//Удалите определенный элемент из изменяемого словаря по его ключу.
    map3.remove(2)
    println(map3)

//Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
// Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val map4 = mapOf<Double, Int>(11.1 to 2, 33.3 to 4, 44.4 to 0, 55.5 to 6)
    for ((d, i) in map4) {
        if (i == 0) {
            println("бесконечность")
        } else {
            println(d/i)
        }
    }

//Измените значение для существующего ключа в изменяемом словаре.
    map3[1] = "одиииин"
    println(map3)

//Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val map51 = mapOf<Int, Int>(1 to 1, 2 to 2, 3 to 3)
    val map52 = mapOf<Int, Int>(4 to 4, 2 to 5, 6 to 6)
    val map53 = mutableMapOf<Int, Int>()
    for ((k, v) in map51) {
        map53[k] = v
    }
    for ((k, v) in map52) {
        map53[k] = v
    }
    println(map53)

//Создайте словарь, где ключами являются строки, а значениями - списки целых чисел.
// Добавьте несколько элементов в этот словарь.
    val map6 = mapOf<String, List<Int>>("Первый" to listOf(1, 2, 3), "Второй" to listOf(4, 5, 6))
    println(map6)

//Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк.
// Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это
// множество ещё строку. Распечатай полученное множество.
    val map7 = mapOf<Int, MutableSet<String>>(1 to mutableSetOf("один", "два", "три"),
        2 to mutableSetOf("четыре", "пять", "шесть"))
    println(map7)

//Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет содержать
// цифру 5 в качестве первого или второго значения.
    val map8 = mapOf<Pair<Int, Int>, String>(1 to 3 to "1", 2 to 5 to "2", 3 to 6 to "3", 5 to 4 to "5")
    for ((p, s) in map8) {
        if (p.first == 5 || p.second == 5) {
            println(p)
        }
    }

//Задачи на подбор оптимального типа для словаря
//Словарь библиотека: Ключи - автор книги, значения - список книг
    val map9 = mutableMapOf<String, MutableList<String>>()

//Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val map10 = mapOf<String, MutableList<String>>()

//Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val map11 = mutableMapOf<String, MutableList<String>>()

//Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
    val map12 = mutableMapOf<String, MutableList<String>>()

//Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
    val map13 = mapOf<String, MutableMap<String, MutableList<String>>>()
}