package org.example.com.stimmax.kotlincourse.lessons.lesson03.homework

class Homework03 {

    // 1. Название мероприятия
    val eventName: String = "Monster Hackaton"
    // 2. Дата проведения
    var eventDate: String = "10 ноября 2025"
    // 3. Место проведения
    var place: String = "Moscow"
    // 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
    private val budgetInfo: String = "подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы."
    // 5. Количество участников
    var numberOfPeople: Int = 0
    // 6. Длительность хакатона
    val countDays: Int = 10
    // 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
    private val suppliers: String = "контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг."
    // 8. Текущее состояние хакатона (статус)
    var status: String = "Скоро начнется"
    // 9. Список спонсоров
    val listSponsors: String = "список спонсоров"
    // 10. Бюджет мероприятия
    private val budget: Double = 34521.00
    // 11. Текущий уровень доступа к интернету
    var internetStatus: Double = 54.33
    // 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
    private val logisticInfo: String = "Информация о транспортировке оборудования"
    // 13. Количество команд
    var countOfTeam: Int = 0
    // 14. Перечень задач
    val tasksPlan: String = "Перечень задач"
    // 15. План эвакуации
    var evacuationPlan: String = "План эвакуации"
    // 16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
    var equipmentList: String = "список доступного оборудования"
    // 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
    var freeEquipmentList: String = "список свободного оборудования"
    // 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
    lateinit var eatingPlan: String
    // 19. План мероприятий на случай сбоев
    val emergencyPlan: String = "План мероприятий"
    // 20. Список экспертов и жюри
    var expertList: String = "Список экспертов и жюри"
    // 21. Политика конфиденциальности
    val privacyPolicy: String = "Политика конфиденциальности"
    // 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
    private lateinit var feedback: String
    // 23. Текущая температура в помещении
    var currentTemperature: Int = 20
    // 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
    var monitoringInfo: String = "Данные мониторинга и анализ производительности"
    // 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
    var netSpeedRegulation: Double = 0.5
    // 26. Уровень освещения
    var lightLevel: Int = 45
    // 27. Лог событий мероприятия
    lateinit var eventLog: String
    // 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
    val medicHelp: Boolean = true
    // 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
    val securityPlan: String = "Планы и процедуры для обеспечения безопасности мероприятия"
    // 30. Регистрационный номер мероприятия
    val eventRegisterNumber: Int = 543
    // 31. Максимально допустимый уровень шума в помещении хакатона.
    val maxNoiseLevel: Int = 70
    // 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
    var noiseIndicator: Int = 32
    // 33. План взаимодействия с прессой
    var pressPlan: String = "План взаимодействия с прессой"
    // 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
    lateinit var projectInfo: String
    // 35. Статус получения всех необходимых разрешений для проведения мероприятия
    val passStatus: String = "статус"
    // 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
    var currentAvailabilityIndicatorEquipment: Boolean = true
    // 37. Список партнеров мероприятия
    val listPartners: String = "Список партнеров мероприятия"
    // 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
    val report: String by lazy { "" }
    // 39. Внутренние правила распределения призов
    var prizeRules: String = "Внутренние правила распределения призов"
    // 40. Список разыгрываемых призов
    val prizes: String = "Список разыгрываемых призов"
    // 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
    val emergencyContact: String = "Контактная информация экстренных служб"
    // 42. Особые условия для участников с ограниченными возможностями
    val specialConditions: String = "Особые условия для участников с ограниченными возможностями"
    // 43. Общее настроение участников (определяется опросами)
    var participantsMood: String = "Общее настроение участников"
    // 44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
    lateinit var hackathonPlan: String
    // 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
    lateinit var specialGuest: String
    // 46. Максимальное количество людей, которое может вместить место проведения.
    val maxCountPeople: Int = 1000
    // 47. Количество часов, отведенное каждой команде для работы над проектом.
    val numberOfHours: Int = 60
}